{
  "metadata": {
    "resourceVersion": "34935"
  },
  "items": [
    {
      "metadata": {
        "name": "ingress-controller-ingress-nginx-controller-858bb45f8",
        "namespace": "ingress-nginx",
        "uid": "05d4b7ff-4b5b-467c-bf37-447e50779560",
        "resourceVersion": "7348",
        "generation": 1,
        "creationTimestamp": "2023-03-08T14:30:03Z",
        "labels": {
          "app.kubernetes.io/component": "controller",
          "app.kubernetes.io/instance": "ingress-controller",
          "app.kubernetes.io/name": "ingress-nginx",
          "pod-template-hash": "858bb45f8"
        },
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "1",
          "field.cattle.io/publicEndpoints": "[{\"addresses\":[\"1d9ea2dea1e25bcec35e46552365d5accaf14736eb45679caeae95d82222d3d5\"],\"port\":443,\"protocol\":\"TCP\",\"serviceName\":\"ingress-nginx:ingress-controller-ingress-nginx-controller\",\"allNodes\":false}]",
          "meta.helm.sh/release-name": "ingress-controller",
          "meta.helm.sh/release-namespace": "ingress-nginx"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "name": "ingress-controller-ingress-nginx-controller",
            "uid": "35c3de68-6ff4-4773-908b-12d45f8db4ab",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-03-08T14:31:02Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:availableReplicas": {},
                "f:fullyLabeledReplicas": {},
                "f:observedGeneration": {},
                "f:readyReplicas": {},
                "f:replicas": {}
              }
            },
            "subresource": "status"
          },
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-03-08T14:33:41Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:field.cattle.io/publicEndpoints": {},
                  "f:meta.helm.sh/release-name": {},
                  "f:meta.helm.sh/release-namespace": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"35c3de68-6ff4-4773-908b-12d45f8db4ab\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:annotations": {
                      ".": {},
                      "f:prometheus.io/port": {},
                      "f:prometheus.io/scrape": {},
                      "f:sidecar.istio.io/rewriteAppHTTPProbers": {},
                      "f:system.io/scrape": {},
                      "f:traffic.sidecar.istio.io/excludeInboundPorts": {},
                      "f:traffic.sidecar.istio.io/includeInboundPorts": {}
                    },
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/component": {},
                      "f:app.kubernetes.io/instance": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"controller\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"LD_PRELOAD\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"POD_NAME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": {
                              ".": {},
                              "f:fieldRef": {}
                            }
                          },
                          "k:{\"name\":\"POD_NAMESPACE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": {
                              ".": {},
                              "f:fieldRef": {}
                            }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:lifecycle": {
                          ".": {},
                          "f:preStop": {
                            ".": {},
                            "f:exec": {
                              ".": {},
                              "f:command": {}
                            }
                          }
                        },
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":443,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":10254,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {
                          ".": {},
                          "f:requests": {
                            ".": {},
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": {
                            ".": {},
                            "f:add": {},
                            "f:drop": {}
                          },
                          "f:runAsUser": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/usr/local/nginx/html\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:imagePullSecrets": {
                      ".": {},
                      "k:{\"name\":\"verrazzano-container-registry\"}": {}
                    },
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"custom-400-error\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "spec": {
        "replicas": 1,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "ingress-controller",
            "app.kubernetes.io/name": "ingress-nginx",
            "pod-template-hash": "858bb45f8"
          }
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app.kubernetes.io/component": "controller",
              "app.kubernetes.io/instance": "ingress-controller",
              "app.kubernetes.io/name": "ingress-nginx",
              "pod-template-hash": "858bb45f8"
            },
            "annotations": {
              "prometheus.io/port": "10254",
              "prometheus.io/scrape": "true",
              "sidecar.istio.io/rewriteAppHTTPProbers": "true",
              "system.io/scrape": "true",
              "traffic.sidecar.istio.io/excludeInboundPorts": "80,443",
              "traffic.sidecar.istio.io/includeInboundPorts": ""
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "custom-400-error",
                "configMap": {
                  "name": "ingress-controller-ingress-nginx-defaultbackend-custom-error-pages",
                  "items": [
                    {
                      "key": "400.html",
                      "path": "400.html"
                    }
                  ],
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "controller",
                "image": "ghcr.io/verrazzano/nginx-ingress-controller:v1.1.1-20221205221956-31c1f6101",
                "args": [
                  "/nginx-ingress-controller",
                  "--default-backend-service=$(POD_NAMESPACE)/ingress-controller-ingress-nginx-defaultbackend",
                  "--publish-service=$(POD_NAMESPACE)/ingress-controller-ingress-nginx-controller",
                  "--election-id=ingress-controller-leader",
                  "--controller-class=k8s.io/verrazzano-ingress-nginx",
                  "--configmap=$(POD_NAMESPACE)/ingress-controller-ingress-nginx-controller",
                  "--ingress-class-by-name=true",
                  "--watch-ingress-without-class=true",
                  "--ingress-class=verrazzano-nginx"
                ],
                "ports": [
                  {
                    "name": "http",
                    "containerPort": 80,
                    "protocol": "TCP"
                  },
                  {
                    "name": "https",
                    "containerPort": 443,
                    "protocol": "TCP"
                  },
                  {
                    "name": "metrics",
                    "containerPort": 10254,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.name"
                      }
                    }
                  },
                  {
                    "name": "POD_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "LD_PRELOAD",
                    "value": "/usr/local/lib/libmimalloc.so"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "100m",
                    "memory": "90Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "custom-400-error",
                    "mountPath": "/usr/local/nginx/html"
                  }
                ],
                "livenessProbe": {
                  "httpGet": {
                    "path": "/healthz",
                    "port": 10254,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 1,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 5
                },
                "readinessProbe": {
                  "httpGet": {
                    "path": "/healthz",
                    "port": 10254,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 1,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "lifecycle": {
                  "preStop": {
                    "exec": {
                      "command": [
                        "/wait-shutdown"
                      ]
                    }
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "add": [
                      "NET_BIND_SERVICE"
                    ],
                    "drop": [
                      "ALL"
                    ]
                  },
                  "runAsUser": 101,
                  "allowPrivilegeEscalation": true
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 300,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "serviceAccountName": "ingress-controller-ingress-nginx",
            "serviceAccount": "ingress-controller-ingress-nginx",
            "securityContext": {},
            "imagePullSecrets": [
              {
                "name": "verrazzano-container-registry"
              }
            ],
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "weight": 100,
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/component": "controller",
                          "app.kubernetes.io/name": "ingress-nginx"
                        }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    }
                  }
                ]
              }
            },
            "schedulerName": "default-scheduler"
          }
        }
      },
      "status": {
        "replicas": 1,
        "fullyLabeledReplicas": 1,
        "readyReplicas": 1,
        "availableReplicas": 1,
        "observedGeneration": 1
      }
    },
    {
      "metadata": {
        "name": "ingress-controller-ingress-nginx-defaultbackend-5ccf69c758",
        "namespace": "ingress-nginx",
        "uid": "57aa651e-52e7-40b3-b565-cfdb3f106632",
        "resourceVersion": "4192",
        "generation": 1,
        "creationTimestamp": "2023-03-08T14:30:03Z",
        "labels": {
          "app.kubernetes.io/component": "default-backend",
          "app.kubernetes.io/instance": "ingress-controller",
          "app.kubernetes.io/name": "ingress-nginx",
          "pod-template-hash": "5ccf69c758"
        },
        "annotations": {
          "deployment.kubernetes.io/desired-replicas": "1",
          "deployment.kubernetes.io/max-replicas": "2",
          "deployment.kubernetes.io/revision": "1",
          "meta.helm.sh/release-name": "ingress-controller",
          "meta.helm.sh/release-namespace": "ingress-nginx"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "name": "ingress-controller-ingress-nginx-defaultbackend",
            "uid": "2363d7b6-45ca-470f-a2cd-1ec43cd0f6d2",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-03-08T14:30:03Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deployment.kubernetes.io/desired-replicas": {},
                  "f:deployment.kubernetes.io/max-replicas": {},
                  "f:deployment.kubernetes.io/revision": {},
                  "f:meta.helm.sh/release-name": {},
                  "f:meta.helm.sh/release-namespace": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"2363d7b6-45ca-470f-a2cd-1ec43cd0f6d2\"}": {}
                }
              },
              "f:spec": {
                "f:replicas": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:annotations": {
                      ".": {},
                      "f:traffic.sidecar.istio.io/excludeInboundPorts": {}
                    },
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/component": {},
                      "f:app.kubernetes.io/instance": {},
                      "f:app.kubernetes.io/name": {},
                      "f:pod-template-hash": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:podAntiAffinity": {
                        ".": {},
                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"ingress-nginx-default-backend\"}": {
                        ".": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": {
                            ".": {},
                            "f:drop": {}
                          },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsNonRoot": {},
                          "f:runAsUser": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/www\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:imagePullSecrets": {
                      ".": {},
                      "k:{\"name\":\"verrazzano-container-registry\"}": {}
                    },
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"error-pages\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-03-08T14:30:45Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:availableReplicas": {},
                "f:fullyLabeledReplicas": {},
                "f:observedGeneration": {},
                "f:readyReplicas": {},
                "f:replicas": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "replicas": 1,
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/component": "default-backend",
            "app.kubernetes.io/instance": "ingress-controller",
            "app.kubernetes.io/name": "ingress-nginx",
            "pod-template-hash": "5ccf69c758"
          }
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app.kubernetes.io/component": "default-backend",
              "app.kubernetes.io/instance": "ingress-controller",
              "app.kubernetes.io/name": "ingress-nginx",
              "pod-template-hash": "5ccf69c758"
            },
            "annotations": {
              "traffic.sidecar.istio.io/excludeInboundPorts": "8080"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "error-pages",
                "configMap": {
                  "name": "ingress-controller-ingress-nginx-defaultbackend-custom-error-pages",
                  "items": [
                    {
                      "key": "301.html",
                      "path": "301.html"
                    },
                    {
                      "key": "302.html",
                      "path": "302.html"
                    },
                    {
                      "key": "304.html",
                      "path": "304.html"
                    },
                    {
                      "key": "307.html",
                      "path": "307.html"
                    },
                    {
                      "key": "308.html",
                      "path": "308.html"
                    },
                    {
                      "key": "400.html",
                      "path": "400.html"
                    },
                    {
                      "key": "401.html",
                      "path": "401.html"
                    },
                    {
                      "key": "403.html",
                      "path": "403.html"
                    },
                    {
                      "key": "404.html",
                      "path": "404.html"
                    },
                    {
                      "key": "407.html",
                      "path": "407.html"
                    },
                    {
                      "key": "408.html",
                      "path": "408.html"
                    },
                    {
                      "key": "409.html",
                      "path": "409.html"
                    },
                    {
                      "key": "413.html",
                      "path": "413.html"
                    },
                    {
                      "key": "414.html",
                      "path": "414.html"
                    },
                    {
                      "key": "415.html",
                      "path": "415.html"
                    },
                    {
                      "key": "416.html",
                      "path": "416.html"
                    },
                    {
                      "key": "418.html",
                      "path": "418.html"
                    },
                    {
                      "key": "421.html",
                      "path": "421.html"
                    },
                    {
                      "key": "429.html",
                      "path": "429.html"
                    },
                    {
                      "key": "431.html",
                      "path": "431.html"
                    },
                    {
                      "key": "500.html",
                      "path": "500.html"
                    },
                    {
                      "key": "501.html",
                      "path": "501.html"
                    },
                    {
                      "key": "502.html",
                      "path": "502.html"
                    },
                    {
                      "key": "503.html",
                      "path": "503.html"
                    },
                    {
                      "key": "504.html",
                      "path": "504.html"
                    },
                    {
                      "key": "505.html",
                      "path": "505.html"
                    },
                    {
                      "key": "301.html",
                      "path": "301.htm"
                    },
                    {
                      "key": "302.html",
                      "path": "302.htm"
                    },
                    {
                      "key": "304.html",
                      "path": "304.htm"
                    },
                    {
                      "key": "307.html",
                      "path": "307.htm"
                    },
                    {
                      "key": "308.html",
                      "path": "308.htm"
                    },
                    {
                      "key": "400.html",
                      "path": "400.htm"
                    },
                    {
                      "key": "401.html",
                      "path": "401.htm"
                    },
                    {
                      "key": "403.html",
                      "path": "403.htm"
                    },
                    {
                      "key": "404.html",
                      "path": "404.htm"
                    },
                    {
                      "key": "407.html",
                      "path": "407.htm"
                    },
                    {
                      "key": "408.html",
                      "path": "408.htm"
                    },
                    {
                      "key": "409.html",
                      "path": "409.htm"
                    },
                    {
                      "key": "413.html",
                      "path": "413.htm"
                    },
                    {
                      "key": "414.html",
                      "path": "414.htm"
                    },
                    {
                      "key": "415.html",
                      "path": "415.htm"
                    },
                    {
                      "key": "416.html",
                      "path": "416.htm"
                    },
                    {
                      "key": "418.html",
                      "path": "418.htm"
                    },
                    {
                      "key": "421.html",
                      "path": "421.htm"
                    },
                    {
                      "key": "429.html",
                      "path": "429.htm"
                    },
                    {
                      "key": "431.html",
                      "path": "431.htm"
                    },
                    {
                      "key": "500.html",
                      "path": "500.htm"
                    },
                    {
                      "key": "501.html",
                      "path": "501.htm"
                    },
                    {
                      "key": "502.html",
                      "path": "502.htm"
                    },
                    {
                      "key": "503.html",
                      "path": "503.htm"
                    },
                    {
                      "key": "504.html",
                      "path": "504.htm"
                    },
                    {
                      "key": "505.html",
                      "path": "505.htm"
                    },
                    {
                      "key": "301.json",
                      "path": "301.json"
                    },
                    {
                      "key": "302.json",
                      "path": "302.json"
                    },
                    {
                      "key": "304.json",
                      "path": "304.json"
                    },
                    {
                      "key": "307.json",
                      "path": "307.json"
                    },
                    {
                      "key": "308.json",
                      "path": "308.json"
                    },
                    {
                      "key": "400.json",
                      "path": "400.json"
                    },
                    {
                      "key": "401.json",
                      "path": "401.json"
                    },
                    {
                      "key": "403.json",
                      "path": "403.json"
                    },
                    {
                      "key": "404.json",
                      "path": "404.json"
                    },
                    {
                      "key": "407.json",
                      "path": "407.json"
                    },
                    {
                      "key": "408.json",
                      "path": "408.json"
                    },
                    {
                      "key": "409.json",
                      "path": "409.json"
                    },
                    {
                      "key": "413.json",
                      "path": "413.json"
                    },
                    {
                      "key": "414.json",
                      "path": "414.json"
                    },
                    {
                      "key": "415.json",
                      "path": "415.json"
                    },
                    {
                      "key": "416.json",
                      "path": "416.json"
                    },
                    {
                      "key": "418.json",
                      "path": "418.json"
                    },
                    {
                      "key": "421.json",
                      "path": "421.json"
                    },
                    {
                      "key": "429.json",
                      "path": "429.json"
                    },
                    {
                      "key": "431.json",
                      "path": "431.json"
                    },
                    {
                      "key": "500.json",
                      "path": "500.json"
                    },
                    {
                      "key": "501.json",
                      "path": "501.json"
                    },
                    {
                      "key": "502.json",
                      "path": "502.json"
                    },
                    {
                      "key": "503.json",
                      "path": "503.json"
                    },
                    {
                      "key": "504.json",
                      "path": "504.json"
                    },
                    {
                      "key": "505.json",
                      "path": "505.json"
                    }
                  ],
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "ingress-nginx-default-backend",
                "image": "ghcr.io/verrazzano/nginx-ingress-default-backend:v1.1.1-20221205221956-31c1f6101",
                "ports": [
                  {
                    "name": "http",
                    "containerPort": 8080,
                    "protocol": "TCP"
                  }
                ],
                "resources": {},
                "volumeMounts": [
                  {
                    "name": "error-pages",
                    "mountPath": "/www"
                  }
                ],
                "livenessProbe": {
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 30,
                  "timeoutSeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "readinessProbe": {
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "timeoutSeconds": 5,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "failureThreshold": 6
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "runAsUser": 65534,
                  "runAsNonRoot": true,
                  "readOnlyRootFilesystem": true,
                  "allowPrivilegeEscalation": false
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 60,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "serviceAccountName": "ingress-controller-ingress-nginx-backend",
            "serviceAccount": "ingress-controller-ingress-nginx-backend",
            "securityContext": {},
            "imagePullSecrets": [
              {
                "name": "verrazzano-container-registry"
              }
            ],
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "weight": 100,
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/component": "default-backend",
                          "app.kubernetes.io/name": "ingress-nginx"
                        }
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    }
                  }
                ]
              }
            },
            "schedulerName": "default-scheduler"
          }
        }
      },
      "status": {
        "replicas": 1,
        "fullyLabeledReplicas": 1,
        "readyReplicas": 1,
        "availableReplicas": 1,
        "observedGeneration": 1
      }
    }
  ]
}