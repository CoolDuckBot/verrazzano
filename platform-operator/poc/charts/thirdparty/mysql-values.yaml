configurationFiles:
  mysql-hook.sh: |
    #!/bin/bash
    #
    # Copyright (c) 2022, Oracle and/or its affiliates.
    # Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
    #
    BACKUP_DIR="/oracle/mysql/data-backup"
    # takes backup of MySQL
    function backup() {
      FILE_PATH=${BACKUP_DIR}/$1
      mysqldump --all-databases --single-transaction --quick --lock-tables=false > ${FILE_PATH} -u root -p${MYSQL_ROOT_PASSWORD}
      if [ $? -eq 0 ]; then
             echo "MySQL dump successful"
             exit 0
        else
            echo "MySQL dump failed"
            exit 1
      fi
    }
    # Checks if MySQL is healthy
    # then restores MySQL from an existing dump file
    function restore() {
      FILE_PATH=${BACKUP_DIR}/$1
      if test -f "${FILE_PATH}"; then
          echo "'${FILE_PATH}' exists."
      else
         echo "'${FILE_PATH}' does not exist"
         exit 1
      fi
      # wait for MySQL to be up
      while ! mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD} --silent; do
              # polling delay to check if MySQL is up
              sleep 5
      done
      # verify MySQL status
      mysqladmin -u root -p${MYSQL_ROOT_PASSWORD} status
      if [ $? != 0 ] ; then
         echo "MySQL status is not healthy even though its reachable."
         exit 1
      fi
      echo "MySQL is up and ready to receive connections"
      # perform MySQL restore
      mysql -u root -p${MYSQL_ROOT_PASSWORD} < ${FILE_PATH}
      if [ $? -eq 0 ]; then
           echo "MySQL restore successful"
           exit 0
      else
          echo "MySQL restore failed"
          exit  1
      fi
    }
    mkdir -p ${BACKUP_DIR}
    function usage {
        echo
        echo "usage: $0 [-o operation ] [-f filename]"
        echo "  -o operation  The operation to be performed on MySQL (backup/restore)"
        echo "  -f filename   The filename of the MySQL dump file"
        echo "  -h            Help"
        echo
        exit 1
    }
    while getopts o:f:h flag
    do
        case "${flag}" in
            o) OPERATION=${OPTARG};;
            f) MYSQL_DUMP_FILE_NAME=${OPTARG};;
            h) usage;;
            *) usage;;
        esac
    done
    if [ -z "${OPERATION:-}" ]; then
        echo " Operation cannot be empty !"
        usage
        exit 1
    else
      if [ $OPERATION != "backup" ] && [ $OPERATION != "restore" ]; then
        echo "Invalid Operation - $OPERATION. Allowed operation values are backup or restore"
        exit 1
      fi
    fi
    if [ -z "${MYSQL_DUMP_FILE_NAME:-}"  ]; then
        echo "Dump file name cannot be empty !"
        usage
        exit 1
    fi
    ${OPERATION} ${MYSQL_DUMP_FILE_NAME}
configurationFilesPath: /etc/mysql/conf.d/
credentials:
  root:
    password: N9UzefMw3UvG
  user:
    name: keycloak
    password: UKz6ZLG3Od76
image:
  pullPolicy: IfNotPresent
  pullSecrets:
    enabled: false
  repository: ghcr.io/verrazzano
initdbScripts:
  create-db.sh: |
    #!/bin/sh
    if [[ $HOSTNAME == *-0 ]]; then
       IsRestore="${DB_RESTORE:-false}"
       rootPassword="${MYSQL_ROOT_PASSWORD}"
       mysql -u root -p${rootPassword} << EOF
    CREATE USER IF NOT EXISTS keycloak IDENTIFIED BY 'UKz6ZLG3Od76';
    CREATE DATABASE IF NOT EXISTS keycloak DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
    GRANT CREATE, ALTER, DROP, INDEX, REFERENCES, SELECT, INSERT, UPDATE, DELETE ON keycloak.* TO 'keycloak'@'%';
    FLUSH PRIVILEGES;
    USE keycloak;
    GRANT XA_RECOVER_ADMIN ON *.* to 'keycloak'@'%';
    EOF
       if [[ $IsRestore == false ]]; then
          mysql -u root -p${rootPassword} << EOF
    USE keycloak;
    CREATE TABLE IF NOT EXISTS DATABASECHANGELOG (
      ID varchar(255) NOT NULL,
      AUTHOR varchar(255) NOT NULL,
      FILENAME varchar(255) NOT NULL,
      DATEEXECUTED datetime NOT NULL,
      ORDEREXECUTED int(11) NOT NULL,
      EXECTYPE varchar(10) NOT NULL,
      MD5SUM varchar(35) DEFAULT NULL,
      DESCRIPTION varchar(255) DEFAULT NULL,
      COMMENTS varchar(255) DEFAULT NULL,
      TAG varchar(255) DEFAULT NULL,
      LIQUIBASE varchar(20) DEFAULT NULL,
      CONTEXTS varchar(255) DEFAULT NULL,
      LABELS varchar(255) DEFAULT NULL,
      DEPLOYMENT_ID varchar(10) DEFAULT NULL,
      PRIMARY KEY (ID,AUTHOR,FILENAME)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
    EOF
       fi
    fi
mysqlOperator:
  image: ghcr.io/verrazzano/mysql-operator:8.0.32-2.0.8
podSpec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: mysql-innodbcluster-mysql-mysql-server
                app.kubernetes.io/name: mysql-innodbcluster-mysql-server
            topologyKey: kubernetes.io/hostname
          weight: 100
router:
  podSpec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: mysql-innodbcluster-mysql-router
                  app.kubernetes.io/name: mysql-router
              topologyKey: kubernetes.io/hostname
            weight: 100
routerInstances: 1
serverInstances: 1
serverVersion: 8.0.32
tls:
  useSelfSigned: true
